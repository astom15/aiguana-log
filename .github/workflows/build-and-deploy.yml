# .github/workflows/build-and-deploy.yml
name: Build and Deploy Monorepo Artifacts

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

jobs:
  build_and_deploy: # Combine build and deploy into one job for simplicity
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: ${{ github.ref == 'refs/heads/master' && vars.PROD_BACKEND_API_URL || vars.DEV_BACKEND_API_URL }}
      HEROKU_APP_NAME: ${{ github.ref == 'refs/heads/master' && secrets.HEROKU_PROD_APP_NAME || secrets.HEROKU_DEV_APP_NAME }}
      FIREBASE_TARGET: ${{ github.ref == 'refs/heads/master' && 'aiguana-log' || 'aiguana-log-dev' }}
      HEROKU_REGISTRY_IMAGE: registry.heroku.com/${{ github.ref == 'refs/heads/master' && secrets.HEROKU_PROD_APP_NAME || secrets.HEROKU_DEV_APP_NAME }}/web
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build All Packages
        run: pnpm build

      - name: Verify API Build Output
        run: ls -R apps/api/dist

      - name: Install Heroku CLI
        run: npm install -g heroku

      # --- Deployment steps ---

      - name: Log in to Heroku Container Registry
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build Docker image
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        run: docker build -t $HEROKU_REGISTRY_IMAGE -f apps/api/Dockerfile .

      - name: Push Docker image to Heroku
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        run: docker push $HEROKU_REGISTRY_IMAGE

      - name: Release Docker image on Heroku
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web --app $HEROKU_APP_NAME

      - name: Apply Firebase Target
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        run: npx firebase-tools target:apply hosting $FIREBASE_TARGET $FIREBASE_TARGET --project aiguana-log --token $FIREBASE_TOKEN

      # Step: Deploy Frontend Artifacts to Firebase
      - name: Deploy Frontend to Firebase
        if: (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        uses: FirebaseExtended/action-hosting-deploy@v0.9.0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AIGUANA_LOG }}
          projectId: aiguana-log
          target: ${{ env.FIREBASE_TARGET }}
          channelId: live
